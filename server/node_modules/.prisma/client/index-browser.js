
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.18.0
 * Query Engine version: 4c784e32044a8a016d99474bd02a3b6123742169
 */
Prisma.prismaVersion = {
  client: "5.18.0",
  engine: "4c784e32044a8a016d99474bd02a3b6123742169"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  fullName: 'fullName',
  email: 'email',
  picture: 'picture',
  balance: 'balance',
  accountStatus: 'accountStatus',
  DataOfBirth: 'DataOfBirth'
};

exports.Prisma.LotteryLikeScalarFieldEnum = {
  id: 'id',
  hosted: 'hosted',
  title: 'title',
  description: 'description',
  image: 'image',
  paticipationdescription: 'paticipationdescription',
  startDate: 'startDate',
  endDate: 'endDate',
  lotteryStatus: 'lotteryStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  conditions: 'conditions',
  prizes: 'prizes',
  link: 'link',
  ownerEmail: 'ownerEmail',
  participantCount: 'participantCount',
  winnersTickets: 'winnersTickets'
};

exports.Prisma.LotteryFundraisingScalarFieldEnum = {
  id: 'id',
  hosted: 'hosted',
  title: 'title',
  description: 'description',
  image: 'image',
  paticipationdescription: 'paticipationdescription',
  startDate: 'startDate',
  endDate: 'endDate',
  lotteryStatus: 'lotteryStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  price: 'price',
  prizes: 'prizes',
  ownerEmail: 'ownerEmail',
  participantCount: 'participantCount',
  winnersTickets: 'winnersTickets'
};

exports.Prisma.LotteryClassicScalarFieldEnum = {
  id: 'id',
  hosted: 'hosted',
  title: 'title',
  description: 'description',
  image: 'image',
  paticipationdescription: 'paticipationdescription',
  startDate: 'startDate',
  endDate: 'endDate',
  lotteryStatus: 'lotteryStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  availableNumberRange: 'availableNumberRange',
  drawnNumbersCount: 'drawnNumbersCount',
  price: 'price',
  prizes: 'prizes',
  ownerEmail: 'ownerEmail',
  participantCount: 'participantCount',
  winnersTickets: 'winnersTickets'
};

exports.Prisma.TicketScalarFieldEnum = {
  id: 'id',
  lotteryType: 'lotteryType',
  lotteryId: 'lotteryId',
  ticketNumber: 'ticketNumber',
  purchaseDate: 'purchaseDate',
  status: 'status',
  numbers: 'numbers',
  userId: 'userId'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  transactionType: 'transactionType',
  creditCard: 'creditCard',
  createdAt: 'createdAt',
  userId: 'userId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.AccountStatus = exports.$Enums.AccountStatus = {
  Active: 'Active',
  Suspended: 'Suspended',
  Banned: 'Banned'
};

exports.LotteryStatus = exports.$Enums.LotteryStatus = {
  Open: 'Open',
  Closed: 'Closed',
  Completed: 'Completed',
  Canceled: 'Canceled'
};

exports.LotteryType = exports.$Enums.LotteryType = {
  Like: 'Like',
  Classic: 'Classic',
  Fundraising: 'Fundraising'
};

exports.TicketStatus = exports.$Enums.TicketStatus = {
  Active: 'Active',
  Canceled: 'Canceled',
  Ended: 'Ended',
  Won: 'Won'
};

exports.TransactionType = exports.$Enums.TransactionType = {
  Deposit: 'Deposit',
  Withdraw: 'Withdraw',
  PurchaseTicket: 'PurchaseTicket',
  CancelTicket: 'CancelTicket'
};

exports.Prisma.ModelName = {
  User: 'User',
  LotteryLike: 'LotteryLike',
  LotteryFundraising: 'LotteryFundraising',
  LotteryClassic: 'LotteryClassic',
  Ticket: 'Ticket',
  Transaction: 'Transaction'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
