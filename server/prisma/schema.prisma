generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

// Define the Enum
enum AccountStatus {
    Active
    Suspended
    Banned
}

enum TicketStatus {
    Active
    Canceled
    Ended
    Won
}

enum LotteryStatus {
    Open
    Closed
    Completed
    Canceled
}

enum LotteryType {
    Like
    Classic
    Fundraising 
}

model User {
    id                      String        @id @default(auto()) @map("_id") @db.ObjectId
    firstName               String?
    lastName                String?
    email                   String        @unique
    picture                 String?
    password                String?
    balance                 Float         @default(0)
    accountStatus           AccountStatus @default(Active)
    DataOfBirth             DateTime?
    LotteryTicketPurchase   Json[]  
    ownedLotteries          LotteryLike[] @relation("Owner")
    transactionHistory      Transaction[] @relation("UserTransactions") 
    conditions              String[]

}

model LotteryLike {
    id              String        @id @default(auto()) @map("_id") @db.ObjectId
    hosted          String
    title           String 
    description     String? 
    startDate       DateTime      @default(now())
    endDate         DateTime        
    lotteryStatus   LotteryStatus @default(Open) 
    createdAt       DateTime      @default(now()) 
    updatedAt       DateTime      @updatedAt
    owner           User          @relation("Owner", fields: [ownerId], references: [id]) 
    ownerId         String        @db.ObjectId 
    tickets         Ticket[]      @relation("UserTicket")
    }

model Ticket {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  lotteryType  LotteryType?  
  lottery      LotteryLike  @relation("UserTicket", fields: [lotteryId], references: [id]) 
  lotteryId    String       @db.ObjectId 
  ticketNumber String       @unique 
  purchaseDate DateTime     @default(now()) 
  status       TicketStatus @default(Active) 

    @@unique(fields: [id,lotteryId])
}

model Transaction {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId 
  number         Int?    
  deposit        Float?   
  withdrawal     Float?   
  ticketPurchase Float?  
  winnings       Float?  
  createdAt      DateTime @default(now())
  user           User     @relation("UserTransactions", fields: [userId], references: [id]) 
  userId         String   @db.ObjectId 

    @@unique(fields: [id,userId])

}

//////////////////////////////////////////////////////////////////////
model Residency {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    title       String
    description String
    price       Int
    address     String
    city        String
    country     String
    image       String
    facilities  Json
    userEmail   String
    //owner       User     @relation("Owner", fields: [userEmail], references: [email])
    createdAt   DateTime @default(now())
    //updatedAt   DateTime @updatedAt

    @@unique(fields: [address,userEmail])
}